- include_vars: "{{ ansible_os_family }}.yml"

- name: ensure sentry directory exists
  file:
    path: /var/sentry/
    state: directory

- name: install sentry and create virtualenv if needed
  pip:
    name: sentry[postgres]
    virtualenv: /var/sentry/ve

- name: install memcached
  pip:
    name: python-memcached
    virtualenv: /var/sentry/ve

- name: install sentry-slack
  pip:
    name: sentry-slack
    virtualenv: /var/sentry/ve

- name: install django-ses
  pip:
    name: django-ses
    virtualenv: /var/sentry/ve

- name: install celery
  pip:
    name: celery
    virtualenv: /var/sentry/ve

- name: install celery[sentry]
  pip:
    name: celery[sentry]
    virtualenv: /var/sentry/ve

- name: install sentry-trello
  pip:
    name: sentry-trello
    virtualenv: /var/sentry/ve

- name: install redis-server
  apt: pkg={{ item }} state=latest
  with_items:
    - redis-server
  when: ansible_os_family == "Debian"

- name: Copy sentry configuration
  template: src=sentry_conf.py.j2 dest=/var/sentry/sentry_conf.py
  notify: restart nginx

- name: Copy nginx configuration for sentry
  template: src=nginx-sentry.conf.j2 dest=/etc/nginx/sites-available/sentry.conf owner={{ nginx_user }} group={{ nginx_group }}

- name: Link nginx configuration for sentry
  file: src=/etc/nginx/sites-available/sentry.conf dest=/etc/nginx/sites-enabled/sentry.conf state=link owner={{ nginx_user }} group={{ nginx_group }}
  notify:
    - restart nginx

- name: Copy supervisor configuration for sentry
  template: src=supervisor-sentry.conf.j2 dest=/etc/supervisor/conf.d/sentry.conf
  notify:
    - reload supervisor

# Shell executable needs to be changed because Ubuntu uses /bin/dash when invoking /bin/sh, which doesn't support source.
# see http://stackoverflow.com/questions/13702425/source-command-not-found-in-sh-shell
- shell: /var/sentry/ve/bin/sentry --config=/var/sentry/sentry_conf.py upgrade --noinput
  notify:
    - restart nginx
    - reload supervisor
# This is a bit of a hack to create a superuser automatically without interactive input. TODO: Create a proper python script for this!
- name: create admin user
  action: shell source ve/bin/activate && export SENTRY_CONF=/var/sentry/sentry_conf.py && python -c "from sentry.utils.runner import configure; configure(); from django.db import DEFAULT_DB_ALIAS as database; from sentry.models import User; User.objects.db_manager(database).create_superuser('{{ superuser_sentry.username }}', '{{ superuser_sentry.email }}', '{{ superuser_sentry.password }}')" executable=/bin/bash chdir=/var/sentry
  notify:
    - restart nginx
    - reload supervisor

- shell: sudo service nginx restart && killall supervisord && sudo supervisord
